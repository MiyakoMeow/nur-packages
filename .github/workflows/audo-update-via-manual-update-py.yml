name: Auto Update Packages via Manual "update.py"
on:
  schedule:
    - cron: "30 11 * * *" # 每天UTC时间11:30运行
  workflow_dispatch: # 允许手动触发

jobs:
  discover-update-scripts:
    name: Find update scripts
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.find-scripts.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - name: Find all update.py files
        id: find-scripts
        run: |
          # 查找所有update.py文件并生成有效的JSON矩阵
          find pkgs -name update.py -exec dirname {} \; | while read -r dir; do
            # 确保目录路径有效
            if [ -n "$dir" ]; then
              # 生成安全名称（替换特殊字符）
              name=$(echo "$dir" | sed 's/[^a-zA-Z0-9]/→/g')
              # 创建JSON对象
              echo "{\"dir\":\"$dir\",\"name\":\"$name\"}"
            fi
          done | jq -s '{"include": .}' | tee matrix.json

          # 输出为单行JSON
          matrix_data=$(jq -c . matrix.json)
          echo "matrix=$matrix_data" >> $GITHUB_OUTPUT
          echo "Generated matrix: $matrix_data"

  validate-matrix:
    name: Validate Matrix
    needs: discover-update-scripts
    runs-on: ubuntu-latest
    steps:
      - name: Check matrix format
        run: |
          echo "Matrix content:"
          echo '${{ needs.discover-update-scripts.outputs.matrix }}'

          echo "Parsed JSON:"
          echo '${{ fromJson(needs.discover-update-scripts.outputs.matrix) }}'

  run-update:
    name: Update - ${{ matrix.name }}
    needs: discover-update-scripts
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.discover-update-scripts.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史记录

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Python Deps
        run: |
          pip install requests

      - name: Run update script
        run: |
          cd "${{ matrix.dir }}"
          python ./update.py

      - name: Detect changes
        id: check-changes
        run: |
          cd "${{ matrix.dir }}"
          # 检查目录是否有变更
          if [ -n "$(git status --porcelain .)" ]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and create PR
        id: create-pull-request
        if: steps.check-changes.outputs.changes_detected == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          branch: "auto-update/${{ matrix.name }}"
          base: main # 修改为目标分支（如main/master）
          commit-message: "chore(auto): update ${{ matrix.name }}"
          title: "Auto Update: ${{ matrix.name }}"
          body: "Automated update from update.py script"
          labels: automated, dependencies
          delete-branch: true
          token: ${{ secrets.AUTOMERGE_TOKEN }}
          # Act like github-actions
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>

      - name: Enable Pull Request Automerge
        if: steps.create-pull-request.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.AUTOMERGE_TOKEN }}
          pull-request-number: ${{ steps.create-pull-request.outputs.pull-request-number }}
          merge-method: squash
