name: Auto Update Packages via Nvfetcher
on:
  schedule:
    - cron: "0 12 * * *" # 每天 UTC 中午12点运行
  workflow_dispatch: # 允许手动触发

jobs:
  update:
    strategy:
      matrix:
        nixPath:
          - nixpkgs=https://github.com/NixOS/nixpkgs/archive/refs/heads/nixpkgs-unstable.tar.gz
    runs-on: ubuntu-latest
    outputs:
      has_updates: ${{ steps.update.outputs.has_updates }}
    steps:
      - name: 🛎️ 检出仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.AUTOMERGE_TOKEN }}

      - name: ⚙️ 设置 Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: "${{ matrix.nixPath }}"
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.AUTOMERGE_TOKEN }}
            extra-platforms = aarch64-linux

      - name: Show nixpkgs version
        run: nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'

      # 生成唯一时间戳作为分支名后缀
      - name: ⏰ 生成时间戳
        id: timestamp
        run: echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT

      - name: 🔄 运行更新
        id: update
        run: |
          #!/usr/bin/env bash
          set -euo pipefail

          # 运行nvfetcher
          nix run nixpkgs#nvfetcher -- -c ./nvfetcher.toml --keep-going

          git config user.name "MiyakoMeow Bot - Update"
          git config user.email "miyakomeow-bot@github.noreply.com"

          # 检查是否有更新
          if [[ -n $(git status --porcelain ./_sources) ]]; then
              echo "✅ 检测到更新!"
              git add ./_sources
              git commit -m "chore: auto-update via nvfetcher"
              echo "::set-output name=has_updates::true" # 设置输出变量
          else
              echo "ℹ️ 无可用更新"
              echo "::set-output name=has_updates::false" # 设置输出变量
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.AUTOMERGE_TOKEN }}

      # 动态生成 PR 正文
      - name: 📝 生成 PR 正文
        if: steps.update.outputs.has_updates == 'true'
        id: pr-body
        run: |
          # 获取最新提交信息
          COMMIT_MSG=$(git log -1 --pretty=%B)

          # 创建 PR 正文文件
          echo "⚡ 由 nvfetcher 自动生成的包更新" > pr_body.md
          echo "**包含以下更新:**" >> pr_body.md
          echo "\`\`\`" >> pr_body.md
          echo "$COMMIT_MSG" >> pr_body.md
          echo "\`\`\`" >> pr_body.md

          # 添加文件变更列表
          echo "**更新的文件:**" >> pr_body.md
          git diff --name-only HEAD^ HEAD -- _sources | sed 's/^/- `/' | sed 's/$/`/' >> pr_body.md

          # 输出文件内容供验证
          cat pr_body.md

          # 保存为输出
          BODY_CONTENT=$(cat pr_body.md)
          echo "body_content<<EOF" >> $GITHUB_OUTPUT
          echo "$BODY_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 📦 创建 PR
        if: steps.update.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          title: "chore: auto-update packages via nvfetcher"
          branch: "auto-update-${{ steps.timestamp.outputs.timestamp }}"
          commit-message: "chore: auto-update packages"
          body: ${{ steps.pr-body.outputs.body_content }}
          labels: "automated, dependencies"
          token: ${{ secrets.AUTOMERGE_TOKEN }}
